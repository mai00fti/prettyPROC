% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pretty_pr_curve.R
\name{pretty_pr_curve}
\alias{pretty_pr_curve}
\title{Pretty Precision-Recall curves}
\usage{
pretty_pr_curve(
  df,
  plot_title = "Precision-recall curve",
  x_col = "Recall",
  y_col = "Precision",
  col_col = "threshold",
  f1_col = "F1",
  colors = c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00",
    "red", "#7F0000")
)
}
\arguments{
\item{df}{- The tibble that can be generated with the package function [get_threshold_data()]}

\item{plot_title}{- A title for your plot}

\item{x_col}{- The column name of the values 2B plotted on the x-axis. Default = "Recall".}

\item{y_col}{- The column name of the values 2B plotted on the x-axis. Default = "Precision".}

\item{col_col}{- The column name of the values for coloring the points. Default = "threshold".}

\item{colors}{- A vector of colors from which a gradient will be generated.
Default: c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000")}

\item{auc_col}{- The column name of the values that contain the AUC. Default = "roc-auc". Set to `NA` if you do
not want to show the AUC line}
}
\value{
A list containing the plot as ggplot2, the maximal F1 score (or [f1_col]), and the threshold that corresponds
        to this max value.
}
\description{
This function plots a pretty PR (precision-recall curve) using the values from the [tidyverse::tibble()] that
can be generated with the package function [get_threshold_data()].
It colors the curve according to the value of the threshold, and annotates and labels the threshold with maximal F1.
}
\examples{
y_true <- sample(c(0,1), replace = TRUE, size = 1000)
y_predicted <- runif(1000)
data <- get_threshold_data(truth = y_true, prediction = y_predicted)
pr <- pretty_pr_curve(df = data,
                      plot_title = "Precision-recall curve")
show(pr$plot)

}
